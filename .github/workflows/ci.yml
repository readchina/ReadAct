name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2        
      - name: Install Build Dependencies
        run: sudo apt-get install libxml2-utils basex
      - name: Generate expanded xml files
        run: |
          basex xml/modules/tei-bibl.xq > xml/listBibl.xml
          basex xml/modules/tei-org.xq > xml/listOrg.xml
          basex xml/modules/tei-person.xq > xml/listPerson.xml
          basex xml/modules/tei-place.xq > xml/listPlace.xml
          basex xml/modules/tei-relation.xq > xml/listRelation.xml
          basex xml/modules/social-network.xq > xml/rActs.gexf
          xmllint --output xml/expand/expand.xml --xinclude xml/tei_header.xml
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: markup-xi
          path: |
            xml/*.xml
            xml/*.gexf
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: markup-expand
          path: xml/expand/expand.xml   
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1    
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9
      - name: Use pip cache  
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-        
      - name: Install Test Dependencies
        run: | 
          sudo apt-get install jing 
          pip install frictionless csvkit
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: markup-xi
          path: xml
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: markup-expand
          path: xml/expand  
      - name: Display structure of downloaded files
        run: ls -R
      - name: Validate Files
        run: | 
          jing xml/schema/tei_all.rng xml/expand/expand.xml
          jing xml/schema/gexf.rng xml/rActs.gexf          
  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/fix-ci-deploy'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Release Dependencies
        run: sudo apt-get install textql basex
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: markup-xi
          path: xml
      - name: Update view01a_txt-titles.csv
        run: textql -output-header -output-file csv/views/view01a_txt-titles.csv -header -sql "select distinct a.act_id, a.act_object, ps.title from Act a, PrimarySource ps inner join PrimarySource on a.act_object = ps.prim_source_id  where ps.title_lang = a.id_lang and a.act_object!='W0414'" csv/data/
      - name: Update view01b_art-titles.csv
        run: textql -output-header -output-file csv/views/view01b_art-titles.csv -header -sql "select distinct a.act_id, a.act_object, aw.title from Act a, ArtWork aw inner join ArtWork on a.act_object = aw.artwork_id  where aw.title_lang = a.id_lang and a.act_object!='W0554'" csv/data/
      - name: Update view02_creator-matrix.csv
        run: textql -output-header -output-file csv/views/view02_creator-matrix.csv -header -sql "select distinct a.act_id, a.act_object, w.creator, (select distinct ps.title from PrimarySource ps where a.act_object = ps.prim_source_id) as title, (select distinct coalesce(p.family_name, '') || ' ' || coalesce(p.first_name, '') from Person p where w.creator = p.person_id) as name from Act a, Work w inner join Work on a.act_object = w.work_id where a.act_object!='W0414'" csv/data/
      - name: Update view03a_reader-author-nodes.csv
        run: textql -output-header -output-file csv/views/view03a_reader-author-nodes.csv -header -sql "select distinct a.agent_id as node_id from Agent a" csv/data/
      - name: Update view03b_reader-author-edges.csv
        run: textql -output-header -output-file csv/views/view03b_reader-author-edges.csv -header -sql "select distinct a.act_id, a.agent as source, w.creator as target from Act a, Work w inner join Work on a.act_object = w.work_id" csv/data/
      - name: Update view04a_rActs.json
        run: basex xml/modules/rAct-vega.xq > csv/views/view04a_rActs.json
      - name: Commit and Push
      # see https://stackoverflow.com/questions/57921401/push-to-origin-from-github-action/58393457#58393457
        uses: actions-x/commit@v2
        with:
          message: "[skip ci] GitHub Actions Bot"
